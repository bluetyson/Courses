---
title: Lecture 6, Question 1
author: Dilawar Singh
date : \today 
header-includes:
    - \usepackage[margin=15mm]{geometry}
    - \usepackage{graphviz}
---

> Design a simple neural network that would tell you if you would prefer tea,
> coffee, or milkshake. Think about internal inputs to the network (hunger,
> sleepiness), about external inputs (cost, attractiveness, time) and anything
> else. Suggest weights that could succeed at this.

All inputs are discretized and normalized [0, 1.0]. For *day_time* 0 means
morning and 1.0 means sleeping time, hunger level 0 is not hungry and 1 means
maximum possible hunger, and same for sleepiness. Typical weights betweem 0 and
100 are put on edges.

External inputs cost, time, and energy are vector of length equal to the number
of input. They put equal weights on all output. No hidden layer is used in this
network.

At each output, value is linear sum of weights multiplied by input value. In the
end, output with highest value is chosen e.g. for input value leepiness = 0.8,
hunger = 0.3, cost = {0.1, 0.11, 0.3}, time= {0.1,0.2,0.3}, energy = {0.1, 0.1,
0.3}, we have milkshake = 22, coffee = 85, and tea = 46 suggesting to have
coffee.

\digraph[scale=0.5]{hnn}{

    hunger -> milkshake [label = "90"];
    hunger -> {tea, coffee} [label="10"];

    sleepiness -> tea [label=60];
    sleepiness -> coffee [label=100];
    sleepiness -> milkshake [label="-50"];

    cost -> {coffee, milkshake, tea } [label=-10];
    time -> {coffee, milkshake, tea} [label=-30];
    energy -> {coffee, milkshake, tea} [label=50];
}

